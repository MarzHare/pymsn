#!/usr/bin/env python
"""
PyMSN v1.2, by unrar (https://github.com/unrar)
Converts old-fashioned MSN Messenger XML logfiles to a lovely readable HTML file.
This is the auto version, which will convert all XML files in a specified folder.
Usage: pymsn.py /path/to/folder [--no-style]
The --no-style flag disables the styling of the messages set by the sender
"""

import sys, os, shutil
from xml.dom.minidom import parse
from os.path import splitext

# Class for HTML building
class HTMLBuilding:
    def build_head(self, title):
        return "<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"pymsn.css\">\n<title>" + title + "</title>\n</head>\n<body>"
    def init_document(self, title):
        return "<h1>Log " + title + ".</h1>\n<div id=\"wrapper\">\n"
    def build_foot(self):
        return "</div>\n<p id=\"footer\">Generated by PyMSN and HTMLBuilding</p>\n</body>\n</html>"

# Main class
class PyMSN:
    # Translate a given XML file to HTML
    # ARGS: pfile: path to XML file
    #       out:  path to output HTML file
    def translate_file(self, pfile, out):
        # Only perform in XML files
        if not pfile.endswith(".xml"):
            print "UNEXPECTED ERROR: Specified file isn't an XML file!"
            exit(1)
        # Create the HTML file
        logname = splitext(os.path.split(pfile)[1])[0]
        file = open(out, 'a+')
        builder = HTMLBuilding()
        file.write(builder.build_head(logname))
        file.write(builder.init_document(logname))
        # Parse the XML file
        pxml = parse(pfile)
        for message in pxml.getElementsByTagName("Message"):
            file.write("<div class=\"message\">\n")
            fromNode = message.getElementsByTagName("From")[0]
            userNode = fromNode.getElementsByTagName("User")[0]
            date = message.getAttribute("Date")
            time = message.getAttribute("Time")
            if inc_date:
                name = "<p class=\"name\">" + userNode.getAttribute("FriendlyName") + " says (" + date + ", " + time + "):</p>"
            else:
                name = "<p class=\"name\">" + userNode.getAttribute("FriendlyName") + " says:</p>"
            file.write(name.encode('utf-8') + "\n")
            if style_messages:
                msg_style = "style=\"" + message.getElementsByTagName("Text")[0].getAttribute("Style") + "\" "
            else:
                msg_style = " "
            msg = "<p class=\"text\"" + msg_style + ">" + message.getElementsByTagName("Text")[0].firstChild.nodeValue + "</p>"
            file.write(msg.encode('utf-8') + "\n</div>\n")
        file.write(builder.build_foot())
        file.close()

# Check if there are any arugments
if len(sys.argv) < 2:
    print "Error\tUsage: pymsn.py /path/to/folder [--no-style] [--no-date]"
    sys.exit(0)
apath = sys.argv[1]

# Set flags
style_messages = True   # Whether or not to use the logged text style
inc_date = True         # Whether or not to include the date next to the sender
is_file = False         # Is the path a single file?
if len(sys.argv) > 2:
    for arg in sys.argv:
        if arg == "--no-style":
            style_messages = False
        elif arg == "--no-date":
            inc_date = False
if os.path.isfile(apath):
    is_file = True

if not is_file:
    print "Welcome to PyMSN. This will translate all the XML logs in " + apath + " to lovely HTML files."
    print "Copying stylesheet to directory..."
    shutil.copy2("pymsn.css", apath + "/")
    #Perform in a lovely loop for all the files
    for filename in os.listdir(apath):
        # Only perform in XML files
        if not filename.endswith(".xml"):
            continue
        print "Currently processing " + filename
        logname = splitext(filename)[0]
        msn = PyMSN()
        msn.translate_file(apath + "/" + filename, apath + "/" + logname + ".html")

    print "All files successfully translated!"
else:
    fname = os.path.split(apath)[1]
    dirname = os.path.split(apath)[0]
    print "Welcome to PyMSN. This will translate the XML log in " + fname + " to a lovely HTML file."
    print "Copying stylesheet to directory..."
    shutil.copy2("pymsn.css", dirname + "/")
    print "Processing " + fname + "..."
    logname = splitext(fname)[0]
    msn = PyMSN()
    msn.translate_file(apath, dirname + "/" + logname + ".html")
    print "Log successfully translated!"
